<!-- Copyright (C) The IETF Trust (2011-2012) -->
<!-- Copyright (C) The Internet Society (2011-2012) -->

<section anchor='ss:ops:seek' title='Operation 66: SEEK'>
  <t>
    SEEK is an operation that allows a client to determine the location of
    the next data_content4 in a file. It allows an implementation of the
    emerging extension to lseek(2) to allow clients to determine SEEK_HOLE and
    SEEK_DATA.
  </t>

  <section toc='exclude' title="ARGUMENT">
    <?rfc include='autogen/seek_args.xml'?>
  </section>

  <section toc='exclude' title="RESULT">
    <?rfc include='autogen/seek_res.xml'?>
  </section>

  <section toc='exclude' title="DESCRIPTION">
    <t>
      From the given sa_offset, find the next data_content4 of type
      sa_what in the file. For either a hole or ADH, this must return
      the data_content4 in its entirety. For data, it must not return
      the actual data.
    </t>

    <t>
      SEEK must follow the same rules for stateids as READ_PLUS
      (<xref target='op:read_plus:desc' />).
    </t>

    <t>
      If the server could not find a corresponding sa_what, then the status
      would still be NFS4_OK, but sr_eof would be TRUE. The sr_contents
      would contain a zero-ed out content of the appropriate type.
    </t>
  </section>
</section>
