<!-- Copyright (C) The IETF Trust (2011-2014) -->
<!-- Copyright (C) The Internet Society (2011-2014) -->

<section anchor="op:offload_close" title="Operation 66: OFFLOAD_CANCEL - Stop an Offloaded Operation">
  <section toc='exclude' title="ARGUMENT">
    <?rfc include='autogen/offload_cancel_args.xml'?>
  </section>

  <section toc='exclude' title="RESULT">
    <?rfc include='autogen/offload_cancel_res.xml'?>
  </section>

  <section toc='exclude' title="DESCRIPTION">
    <t>
      OFFLOAD_CANCEL is used by the client to terminate an asynchronous
      operation, which is identifed both by CURRENT_FH and the
      oca_stateid. I.e., there can be multiple offloaded operations acting
      on the file, the stateid will identify to the server exactly which
      one is to be stopped.  Currently there are only two operations
      which can decide to be asynchronous: COPY and WRITE_SAME.
    </t>

    <t>
      In the context of server-to-server copy, the client can send
      OFFLOAD_CANCEL to either the source or destination server, albeit
      with a different stateid.  The client uses OFFLOAD_CANCEL to inform
      the destination to stop the active transfer and uses the stateid it
      got back from the COPY operation. The client uses OFFLOAD_CANCEL
      and the stateid it used in the COPY_NOTIFY to inform the source
      to not allow any more copying from the destination.
    </t>

    <t>
      OFFLOAD_CANCEL is also useful in situations in which the source
      server granted a very long or infinite lease on the destination
      server's ability to read the source file and all copy operations
      on the source file have been completed.
    </t>
  </section>
</section>
